"use strict";(self["webpackChunkvue_ecshop"]=self["webpackChunkvue_ecshop"]||[]).push([[855],{6855:function(a,t,o){o.r(t),o.d(t,{default:function(){return $}});var e=o(6768),s=o(4232);const i=(0,e.Fv)('<div class="accordion" id="accordionExample"><div class="accordion-item"><h2 class="accordion-header" id="headingOne"><button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne"> Accordion Item #1 </button></h2><div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample"><div class="accordion-body"><strong>This is the first item&#39;s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingTwo"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"> Accordion Item #2 </button></h2><div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample"><div class="accordion-body"><strong>This is the second item&#39;s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingThree"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree"> Accordion Item #3 </button></h2><div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample"><div class="accordion-body"><strong>This is the third item&#39;s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div></div>',1),c={class:"container mt-4 pt-4"},n={"aria-label":"breadcrumb mb-3"},l={class:"breadcrumb"},d={class:"breadcrumb-item"},r={class:"breadcrumb-item","aria-current":"page"},u={class:"breadcrumb-item active fw-bold","aria-current":"page"},h={class:"row"},p={class:"col-8"},b=(0,e.Lk)("p",null,"商品描述：Lorem ipsum dolor sit amet consectetur adipisicing elit. Velit, suscipit animi aut, consequatur voluptate nam molestiae praesentium maiores error eligendi quisquam at facere et, ducimus non accusantium dolorem dolore provident.",-1),g={class:"col-4"},v={class:"fs-6 mb-0"},m={class:"fs-5"},y=(0,e.Lk)("hr",null,null,-1),w=["disabled"],k={key:0,class:"spinner-border spinner-border-sm text-warning",role:"status"},L=(0,e.Lk)("span",{class:"visually-hidden"},"Loading...",-1),f=[L],T=(0,e.Lk)("i",{class:"bi bi-cart4"},null,-1);function I(a,t,o,L,I,S){const C=(0,e.g2)("ShopNavbar"),x=(0,e.g2)("LoadingOverlay"),_=(0,e.g2)("router-link");return(0,e.uX)(),(0,e.CE)(e.FK,null,[(0,e.bF)(C),i,(0,e.bF)(x,{active:I.isLoading},null,8,["active"]),(0,e.Lk)("div",c,[(0,e.Lk)("nav",n,[(0,e.Lk)("ol",l,[(0,e.Lk)("li",d,[(0,e.bF)(_,{class:"link-secondary",to:"/products"},{default:(0,e.k6)((()=>[(0,e.eW)("全部商品")])),_:1})]),(0,e.Lk)("li",r,(0,s.v_)(I.product.category),1),(0,e.Lk)("li",u,(0,s.v_)(I.product.title),1)])]),(0,e.Lk)("div",h,[(0,e.Lk)("div",p,[(0,e.Lk)("h2",null,(0,s.v_)(I.product.title),1),b,(0,e.Lk)("div",{style:(0,s.Tr)([{height:"800px","background-size":"cover","background-position":"top"},{backgroundImage:`url(${I.product.imageUrl})`}])},null,4)]),(0,e.Lk)("div",g,[(0,e.Lk)("p",v,[(0,e.Lk)("del",null,"原價 NT$"+(0,s.v_)(I.product.origin_price),1)]),(0,e.Lk)("p",m,[(0,e.Lk)("strong",null,"現在只要 NT$"+(0,s.v_)(I.product.price),1)]),y,(0,e.Lk)("button",{type:"button",class:"btn btn-outline-warning",onClick:t[0]||(t[0]=a=>S.addCart(I.product.id)),disabled:this.status.loadingItem===I.product.id},[this.status.loadingItem===I.product.id?((0,e.uX)(),(0,e.CE)("div",k,f)):(0,e.Q3)("",!0),T,(0,e.eW)(" 加入購物車 ")],8,w)])])])],64)}var S=o(7961),C={data(){return{product:{},isLoading:!1,id:"",status:{loadingItem:""}}},components:{ShopNavbar:S.A},inject:["emitter"],methods:{getProduct(a){const t=`https://vue3-course-api.hexschool.io/api/ecshop-api/product/${a}`;this.isLoading=!0,this.$http.get(t).then((a=>{this.product=a.data.product,this.isLoading=!1,console.log(a)}))},addCart(a){const t="https://vue3-course-api.hexschool.io/api/ecshop-api/cart";this.status.loadingItem=a;const o={product_id:a,qty:1};this.$http.post(t,{data:o}).then((a=>{this.status.loadingItem="",this.$httpMsgState(a,"加入購物車"),console.log(a.data)}))}},created(){this.id=this.$route.params.productId,this.getProduct(this.id)}},x=o(1241);const _=(0,x.A)(C,[["render",I]]);var $=_}}]);
//# sourceMappingURL=855.f1500a91.js.map